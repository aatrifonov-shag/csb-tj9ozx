{"version":3,"sources":["Box/img/block-regular.png","Box/img/block-red.png","Box/img/block-blue.png","Box/img/block-green.png","Box/img/box.jpg","Box/img/rotation-circle.svg","audio/sounds/box-rotate.mp3","audio/sounds/box-opened.mp3","Box/config.ts","audio/index.ts","Box/styles.ts","Box/store.ts","Box/RotationCircle.tsx","Box/Block.tsx","Box/Box.tsx","index.tsx"],"names":["BlocksEnum","CorrectEnum","blocksImages","Regular","require","Red","Blue","Green","RotationsEnum","correctIndexes","blocksPositions","AudioEnum","rotations","TopLeft","TopRight","Bottom","ROTATION_CIRCLE_SHIFT","ROTATION_CIRCLE_RADIUS","generatePositionStyle","position","top","left","generateCicleStyle","radius","width","height","BoxWrapper","styled","div","rotationCircleMixin","css","RotationCircleWrapper","default","props","$rotate","isCorrect","rotateIconMixin","rotationBlockMixin","BlockImg","type","withRotationCircle","isHide","isRotation","Success","Shuffle","button","AUDIOS","BoxRotate","src","BoxOpened","AudioController","audios","play","key","addAudio","audio","this","Howl","a","loadAudio","Promise","res","onLoad","on","load","all","map","BoxStore","blocks","isAnimation","rotationIndex","audioController","makeObservable","observable","rotate","action","bound","shuffle","setAnimation","Array","fill","sort","Math","random","isReshuffle","isOneCorrect","isCorrectAtRotateBlock","Object","keys","some","index","isCorrectIndex","rotationsIndexes","correctTypes","every","block","clickIndex","rotationsMap","forEach","length","value","BoxGameContext","createContext","useStore","context","data","useContext","Error","observer","store","getPosition","inCirclePosition","rotationBlockIndex","i","blockPosition","style","rotateIndex","onClick","setTimeout","undefined","rotationIndexes","onSuccess","React","preload","Provider","rootElement","document","getElementById","render"],"mappings":"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","file":"static/js/main.5de1a449.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/block-regular.571b4a9f.png\";","export default __webpack_public_path__ + \"static/media/block-red.3e7ab9d5.png\";","export default __webpack_public_path__ + \"static/media/block-blue.e87e1c27.png\";","export default __webpack_public_path__ + \"static/media/block-green.6ddc0d28.png\";","export default __webpack_public_path__ + \"static/media/box.4b9dffa4.jpg\";","export default __webpack_public_path__ + \"static/media/rotation-circle.0b5daaa5.svg\";","export default __webpack_public_path__ + \"static/media/box-rotate.cb7aca3a.mp3\";","export default __webpack_public_path__ + \"static/media/box-opened.be41e0c4.mp3\";","import { PositionType } from \"./types\";\n\nexport enum BlocksEnum {\n  Regular = \"regular\",\n  Red = \"red\",\n  Blue = \"blue\",\n  Green = \"green\"\n}\n\nexport const blocksImages: Record<BlocksEnum, string> = {\n  [BlocksEnum.Regular]: require(\"./img/block-regular.png\"),\n  [BlocksEnum.Red]: require(\"./img/block-red.png\"),\n  [BlocksEnum.Blue]: require(\"./img/block-blue.png\"),\n  [BlocksEnum.Green]: require(\"./img/block-green.png\")\n};\n\nexport enum CorrectEnum {\n  Red = \"1\",\n  Blue = \"9\",\n  Green = \"7\"\n}\n\nexport const correctIndexes: Record<CorrectEnum, BlocksEnum> = {\n  [CorrectEnum.Red]: BlocksEnum.Red,\n  [CorrectEnum.Blue]: BlocksEnum.Blue,\n  [CorrectEnum.Green]: BlocksEnum.Green\n};\n\nexport const blocksPositions: PositionType[] = [\n  [11.88, 22.93],\n  [11.88, 31.27],\n  [11.88, 39.61],\n  [18.97, 18.66],\n  [18.97, 27],\n  [18.97, 35.34],\n  [18.97, 43.68],\n  [26.27, 22.93],\n  [26.27, 31.17],\n  [26.27, 39.61],\n  [33.36, 27],\n  [33.36, 35.34]\n];\n\nexport enum RotationsEnum {\n  TopLeft = \"4\",\n  TopRight = \"5\",\n  Bottom = \"8\"\n}\n\nexport const rotations: Record<RotationsEnum, number[]> = {\n  [RotationsEnum.TopLeft]: [0, 1, 5, 8, 7, 3],\n  [RotationsEnum.TopRight]: [1, 2, 6, 9, 8, 4],\n  [RotationsEnum.Bottom]: [4, 5, 9, 11, 10, 7]\n};\n\nexport const BLOCK_RADIUS = 3.6;\nexport const ROTATION_ANGLE = 360 / 6; // 6 блоков в круге\nexport const ROTATION_CIRCLE_RADIUS = 13;\nexport const ROTATION_CIRCLE_SHIFT = ROTATION_CIRCLE_RADIUS - BLOCK_RADIUS;\nexport const ANIMATION_TIME = 500;\n","import { Howl, HowlOptions } from \"howler\";\n\nexport enum AudioEnum {\n  BoxRotate,\n  BoxOpened\n}\n\nexport const AUDIOS: Record<AudioEnum, HowlOptions> = {\n  [AudioEnum.BoxRotate]: {\n    src: require(\"./sounds/box-rotate.mp3\")\n  },\n  [AudioEnum.BoxOpened]: {\n    src: require(\"./sounds/box-opened.mp3\")\n  }\n};\n\nexport class AudioController {\n  audios: Partial<Record<AudioEnum, Howl>> = {};\n\n  addAudio(key: AudioEnum, audio?: HowlOptions): void {\n    if (!(key in this.audios)) {\n      this.audios[key] = new Howl(audio || AUDIOS[key]);\n    }\n  }\n\n  play = (key: AudioEnum): Howl | null => {\n    if (!(key in this.audios)) {\n      this.addAudio(key);\n    }\n    const audio = this.audios[key];\n\n    if (audio) {\n      audio.play();\n      return audio;\n    }\n\n    return null;\n  };\n\n  async preload(audios: AudioEnum[]): Promise<unknown> {\n    const loadAudio = (key: AudioEnum) =>\n      new Promise<void>((res) => {\n        this.addAudio(key);\n        const onLoad = () => res();\n\n        this.audios[key]?.on(\"load\", onLoad);\n        this.audios[key]?.on(\"loaderror\", onLoad);\n        this.audios[key]?.load();\n      });\n\n    return Promise.all(audios.map(loadAudio));\n  }\n}\n","import styled, { css } from \"styled-components\";\n\nimport {\n  blocksImages,\n  BLOCK_RADIUS,\n  ROTATION_CIRCLE_RADIUS,\n  ROTATION_CIRCLE_SHIFT,\n  ANIMATION_TIME,\n  ROTATION_ANGLE\n} from \"./config\";\nimport { PositionType } from \"./types\";\nimport { BlocksEnum } from \"./config\";\n\nexport const generatePositionStyle = (position: PositionType) => ({\n  top: position[0] + \"rem\",\n  left: position[1] + \"rem\"\n});\n\nexport const generateCicleStyle = (radius: number) => ({\n  \"border-radius\": \"50%\",\n  width: radius * 2 + \"rem\",\n  height: radius * 2 + \"rem\"\n});\n\nexport const BoxWrapper = styled.div`\n  background: url(${require(\"./img/box.jpg\")}) no-repeat center / contain;\n  width: 69.7rem;\n  height: 49rem;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  margin: auto;\n`;\n\nconst rotationCircleMixin = css`\n  transition: transform ${ANIMATION_TIME}ms linear;\n  transform: rotate(${ROTATION_ANGLE}deg);\n  opacity: 1;\n`;\n\ninterface RotationCircleWrapperProps {\n  $rotate: boolean;\n  isCorrect: boolean;\n}\n\nexport const RotationCircleWrapper = styled.div<RotationCircleWrapperProps>`\n  position: absolute;\n  z-index: 1;\n  opacity: 0;\n  transform: rotate(0);\n  will-change: transform, opacity;\n  background: url(${require(\"./img/rotation-circle.svg\").default}) no-repeat\n    center / contain;\n  ${generateCicleStyle(ROTATION_CIRCLE_RADIUS)}\n  left: -${ROTATION_CIRCLE_SHIFT}rem;\n  top: -${ROTATION_CIRCLE_SHIFT}rem;\n  pointer-events: none;\n  transition: opacity 0.2s linear;\n  ${(props) => props.$rotate && rotationCircleMixin};\n  display: ${(props) => (props.isCorrect ? \"none\" : \"block\")};\n`;\n\nconst rotateIconMixin = css`\n  &:before {\n    content: \"\";\n    display: block;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    margin: auto;\n    width: 50%;\n    height: 50%;\n    background: url(http://d1.endata.cx/data/games/72737/lvl_11_box_bg.jpg)\n      no-repeat center / contain;\n  }\n`;\n\nconst rotationBlockMixin = css`\n  transition: ${ANIMATION_TIME}ms linear;\n  transform: rotate(-${ROTATION_ANGLE}deg);\n`;\n\ninterface BlockImgProps {\n  type: BlocksEnum;\n  isRotation?: boolean;\n  $rotate?: boolean;\n  isHide?: boolean;\n  isCorrect?: boolean;\n  withRotationCircle?: boolean;\n}\n\nexport const BlockImg = styled.div<BlockImgProps>`\n  background: url(${(props) => blocksImages[props.type]}) no-repeat center /\n    contain;\n  position: absolute;\n  ${generateCicleStyle(BLOCK_RADIUS)}\n  will-change: transform;\n  z-index: ${(props) => (props.withRotationCircle ? 1 : 0)};\n  display: ${(props) => (props.isHide ? \"none\" : \"block\")};\n  user-select: ${(props) => (props.isCorrect ? \"none\" : \"auto\")};\n\n  ${(props) => props.isRotation && rotateIconMixin};\n  ${(props) => props.$rotate && rotationBlockMixin};\n\n  &:hover {\n    ${RotationCircleWrapper} {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Success = styled.div`\n  position: absolute;\n  width: 100%;\n  text-align: center;\n  top: 1rem;\n  font-size: 2rem;\n  background: black;\n  color: olivedrab;\n  font-family: monospace;\n  text-align: center;\n`;\n\nexport const Shuffle = styled.button`\n  position: absolute;\n  bottom: 1rem;\n  right: 1rem;\n  font-size: 1rem;\n  user-select: none;\n  cursor: pointer;\n`;\n","import { action, makeObservable, observable } from \"mobx\";\nimport { createContext, useContext } from \"react\";\n\nimport { correctIndexes, rotations, BlocksEnum, RotationsEnum } from \"./config\";\n\nimport { AudioController } from \"../audio\";\n\nexport class BoxStore {\n  blocks: BlocksEnum[] = [];\n  isAnimation = false;\n  rotationIndex: number | null = null;\n\n  audioController = new AudioController();\n\n  constructor() {\n    makeObservable(this, {\n      blocks: observable,\n      isAnimation: observable,\n      rotationIndex: observable,\n      rotate: action.bound,\n      shuffle: action.bound,\n      setAnimation: action.bound\n    });\n\n    this.shuffle();\n    // this.blocks = new Array(12).fill(BlocksEnum.regular);\n    // this.blocks[1] = BlocksEnum.red;\n    // this.blocks[10] = BlocksEnum.green;\n    // this.blocks[5] = BlocksEnum.blue;\n  }\n\n  shuffle(): void {\n    this.blocks = [\n      ...new Array(9).fill(BlocksEnum.Regular),\n      BlocksEnum.Red,\n      BlocksEnum.Blue,\n      BlocksEnum.Green\n    ].sort(() => Math.random() - 0.5);\n\n    if (this.isReshuffle) {\n      this.shuffle();\n    }\n  }\n\n  get isReshuffle(): boolean {\n    return this.isOneCorrect || this.isCorrectAtRotateBlock;\n  }\n\n  get isOneCorrect(): boolean {\n    return Object.keys(correctIndexes).some((index) =>\n      this.isCorrectIndex(index)\n    );\n  }\n\n  isCorrectIndex(index: number | string): boolean {\n    return correctIndexes[index] === this.blocks[index];\n  }\n\n  get isCorrectAtRotateBlock(): boolean {\n    const rotationsIndexes = [\n      RotationsEnum.TopLeft,\n      RotationsEnum.TopRight,\n      RotationsEnum.Bottom\n    ];\n    const correctTypes = [BlocksEnum.Red, BlocksEnum.Blue, BlocksEnum.Green];\n\n    return rotationsIndexes.some((index) => {\n      return correctTypes.some((type) => this.blocks[index] === type);\n    });\n  }\n\n  get isCorrect(): boolean {\n    return Object.keys(correctIndexes).every((block) =>\n      this.isCorrectIndex(block)\n    );\n  }\n\n  rotate(clickIndex: number): void {\n    if (!rotations[clickIndex] || this.isCorrect) {\n      return;\n    }\n\n    const blocks = [...this.blocks];\n    const rotationsMap = rotations[clickIndex];\n\n    rotationsMap.forEach((rotationIndex: number, index: number) => {\n      if (rotationsMap.length - 1 === index) {\n        this.blocks[rotationsMap[0]] =\n          blocks[rotationsMap[rotationsMap.length - 1]];\n      } else {\n        this.blocks[rotationsMap[index + 1]] = blocks[rotationIndex];\n      }\n    });\n  }\n\n  setAnimation(value: boolean, index?: number): void {\n    this.isAnimation = value;\n    this.rotationIndex = index || null;\n  }\n}\n\nexport const BoxGameContext = createContext<BoxStore | null>(null);\n\nexport const useStore = <T>(context: React.Context<T | null>): T => {\n  const data = useContext(context);\n\n  if (!data) {\n    throw new Error(\"Using store outside of context\");\n  }\n\n  return data;\n};\n","import * as React from \"react\";\nimport { observer } from \"mobx-react\";\n\nimport { BoxGameContext, useStore } from \"./store\";\nimport { BlockProps, PositionType } from \"./types\";\nimport {\n  RotationCircleWrapper,\n  BlockImg,\n  generatePositionStyle\n} from \"./styles\";\nimport { rotations, ROTATION_CIRCLE_SHIFT, blocksPositions } from \"./config\";\n\nconst RotationCircle: React.FC<BlockProps> = ({\n  position,\n  type,\n  index\n}: BlockProps) => {\n  const store = useStore(BoxGameContext);\n\n  const getPosition = (inCirclePosition: PositionType): PositionType => {\n    return [\n      inCirclePosition[0] - position[0] + ROTATION_CIRCLE_SHIFT,\n      inCirclePosition[1] - position[1] + ROTATION_CIRCLE_SHIFT\n    ];\n  };\n\n  return (\n    // Рисуем оверлей для вращающихся блоков\n    <RotationCircleWrapper\n      $rotate={store.isAnimation && store.rotationIndex === index}\n      isCorrect={store.isCorrect}\n    >\n      {Object.keys(rotations[index]).map((rotationBlockIndex, i) => {\n        const block = rotations[index][rotationBlockIndex];\n        const blockPosition = getPosition(blocksPositions[block]);\n        // Проходимся по индексам вращений - рисуем блоки, которые будут вращаться\n        return (\n          <BlockImg\n            type={store.blocks[block]}\n            key={i}\n            $rotate={store.isAnimation && store.rotationIndex === index}\n            style={generatePositionStyle(blockPosition)}\n          />\n        );\n      })}\n      {/* Рисуем центральный блок */}\n      <BlockImg\n        type={type}\n        isRotation\n        $rotate={store?.isAnimation && store?.rotationIndex === index}\n        style={generatePositionStyle(getPosition(position))}\n      />\n    </RotationCircleWrapper>\n  );\n};\n\nexport default observer(RotationCircle);\n","import * as React from \"react\";\nimport { observer } from \"mobx-react\";\n\nimport { BlockImg, generatePositionStyle } from \"./styles\";\nimport { rotations, ANIMATION_TIME, BlocksEnum } from \"./config\";\nimport { PositionType } from \"./types\";\nimport { BoxGameContext, useStore } from \"./store\";\nimport RotationCircle from \"./RotationCircle\";\n\nimport { AudioEnum } from \"../audio\";\n\ninterface Props {\n  position: PositionType;\n  type: BlocksEnum;\n  index: number;\n}\n\nconst Block: React.FC<Props> = ({ position, type, index }: Props) => {\n  const store = useStore(BoxGameContext);\n  const isRotation = rotations[index];\n\n  const withRotationCircle =\n    isRotation && (!store.rotationIndex || store.rotationIndex === index);\n\n  const rotateIndex = () => {\n    store.rotate(index);\n    store.setAnimation(false);\n  };\n\n  const handleRotation = () => {\n    if (store.isAnimation) {\n      return;\n    }\n    store.setAnimation(true, index);\n    store.audioController.play(AudioEnum.BoxRotate);\n    setTimeout(rotateIndex, ANIMATION_TIME);\n  };\n\n  const isHide = () => {\n    if (!store.rotationIndex) {\n      return false;\n    }\n    const rotationIndexes = rotations[store.rotationIndex];\n    return Object.keys(rotationIndexes).some(\n      (key) => rotationIndexes[key] === index\n    );\n  };\n\n  return (\n    <BlockImg\n      type={type}\n      onClick={isRotation && !store.isCorrect ? handleRotation : undefined}\n      isHide={isHide()}\n      isCorrect={store.isCorrect}\n      withRotationCircle={withRotationCircle}\n      style={generatePositionStyle(position)}\n    >\n      {withRotationCircle && (\n        <RotationCircle position={position} type={type} index={index} />\n      )}\n    </BlockImg>\n  );\n};\n\nexport default observer(Block);\n","import * as React from \"react\";\nimport { observer } from \"mobx-react\";\n\nimport Block from \"./Block\";\nimport { BoxWrapper, Success, Shuffle } from \"./styles\";\nimport { blocksPositions } from \"./config\";\nimport { BoxStore, BoxGameContext } from \"./store\";\nimport { AudioEnum } from \"../audio\";\n\ntype Props = {\n  onSuccess?: void;\n};\n\nconst Box: React.FC<Props> = ({ onSuccess }: Props) => {\n  const [store] = React.useState(() => new BoxStore());\n\n  React.useEffect(() => {\n    store.audioController.preload([AudioEnum.BoxOpened, AudioEnum.BoxRotate]);\n  }, []);\n\n  React.useEffect(() => {\n    if (store.isCorrect) {\n      store.audioController.play(AudioEnum.BoxOpened);\n    }\n  }, [store.isCorrect]);\n\n  return (\n    <BoxGameContext.Provider value={store}>\n      <BoxWrapper>\n        {blocksPositions.map((position, i) => (\n          <Block position={position} index={i} type={store.blocks[i]} key={i} />\n        ))}\n        {store.isCorrect ? (\n          <Success>Congrats! Final code is «11»</Success>\n        ) : (\n          <Shuffle onClick={store.shuffle}>Shuffle</Shuffle>\n        )}\n      </BoxWrapper>\n    </BoxGameContext.Provider>\n  );\n};\n\nexport default observer(Box);\n","import * as React from \"react\";\nimport { render } from \"react-dom\";\n\nimport Box from \"./Box\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<Box />, rootElement);\n"],"sourceRoot":""}